﻿@using FEPetServices.Form.OrdersForm;
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <link href="~/css/toastNotification.css" rel="stylesheet" />
    <link href="~/css/orders/stylesheet.css" rel="stylesheet" />
    <link href="~/css/map.css" rel="stylesheet" />
    <link href="~/css/OrderDetail.css" rel="stylesheet" />
    <link href="~/css/orders/detail.css" rel="stylesheet" />

</head>
@{
    var isStep5ActiveProduct = 0;
    var isStep5ActiveService = 0;
    var isStep5ActivePartner = 0;
}
<body>
    <div class="card right-profile-card">
        <div class="card-header alert-primary">
            <div class="back-list" onclick="goBack()">
                <span><i class="fa-solid fa-chevron-left"></i></span>
                Trở lại
            </div>
            <div class="header-contents">
                <div class="header-content-code"> Mã đơn hàng : @Model.OrderId | </div>
                <div class="header-content-status">
                    @if (Model.OrderStatus.Trim() == "Confirmed")
                    {
                        <span style="display:inline-block" class="badge badge-info">Đơn hàng đã được xác nhận và trong giai đoạn xử lý</span>
                    }
                    else if (Model.OrderStatus.Trim() == "Processing")
                    {
                        <span style="display:inline-block" class="badge badge-info">Đơn hàng đang được thực hiện</span>
                    }
                    else if (Model.OrderStatus.Trim() == "Placed")
                    {
                        <span style="display:inline-block" class="badge badge-info">Đơn hàng đang chờ xác nhận</span>
                    }
                    else if (Model.OrderStatus.Trim() == "Completed")
                    {
                        <span style="display:inline-block" class="badge badge-info">Đơn hàng đã hoàn thành</span>
                    }
                    else if (Model.OrderStatus.Trim() == "Cancelled")
                    {
                        <span style="display:inline-block" class="badge badge-info">Đơn hàng bị huỷ</span>
                    }
                </div>
            </div>
        </div>

        @if (Model.OrderStatus.Trim() != "Cancelled")
        {
            <section class="vh-25 p-1">
                <div class="container h-100">
                    <div class="row d-flex justify-content-center align-items-center h-100">
                        <div class="col-12">
                            <div class="card card-stepper text-black" style="border-radius: 16px;">
                                <div class="card-body" style="max-height: 90px;">
                                    <ul id="progressbar-2" class="d-flex justify-content-between mx-0 mt-0 mb-5 px-0 pt-0 pb-2">
                                        <li class="step0 @if(Model.OrderStatus.Trim() == "Placed" || Model.OrderStatus.Trim() == "Processing"
                                        || Model.OrderStatus.Trim() == "Confirmed" || Model.OrderStatus.Trim() == "Completed"
                                        ) {
                                    <text>active</text>
                                    } text-center" id="step1">
                                                    <i class="fa-solid fa-receipt"></i>
                                                </li>

                                        <li class="step0 @if(Model.OrderStatus.Trim() == "Confirmed" || Model.OrderStatus.Trim() == "Processing"
                                        || Model.OrderStatus.Trim() == "Completed") {
                                    <text>active</text>
                                    } text-center" id="step2">
                                                    <i class="fa-solid fa-check"></i>
                                                </li>

                                        <li class="step0 @if(Model.OrderStatus.Trim() == "Processing" ||  Model.OrderStatus.Trim() == "Completed") {
                                    <text>active</text>
                                    } text-center" id="step3">
                                                    <i class="fa-solid fa-truck"></i>
                                                </li>

                                        <li class="step0 @if(Model.OrderStatus.Trim() == "Completed") {
                                    <text>active</text>
                                    }  text-center" id="step4">
                                                    <i class="fa-solid fa-download"></i>
                                                </li>   

                                        <li class="step0 text-end" id="step5">
                                            <i class="fa-regular fa-star"></i>
                                        </li>
                                    </ul>
                                </div>
                            </div>

                            <div class="d-flex justify-content-between">
                                <div class="d-lg-flex">
                                    <div>
                                        <p class="mb-0">Đơn hàng đang chờ xác nhận</p>
                                    </div>
                                </div>
                                <div class="d-lg-flex">
                                    <div>
                                        <p class="mb-0">Đơn hàng đã được xác nhận và trong giai đoạn xử lý</p>
                                    </div>
                                </div>
                                <div class="d-lg-flex">
                                    <div>
                                        <p class="mb-0">Đơn hàng đang được thực hiện</p>
                                    </div>
                                </div>
                                <div class="d-lg-flex">
                                    <div>
                                        <p class="mb-0">Đơn hàng đã hoàn thành</p>
                                    </div>
                                </div>
                                <div class="d-lg-flex">
                                    <div>
                                        <p class="mb-0">Đánh giá</p>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </section>
        }
        else if (Model.OrderStatus.Trim() == "Cancelled")
        {
            <div class="card-body cancelled-order" style="border-radius:0px">
                <p>Đơn hàng bị huỷ !!!</p>
            </div>
        }

        <div class="card-order-infomation">
            <div class="card-order-header">
                <p>Địa chỉ nhận hàng</p>
            </div>
            <div class="card-order-detail">
                <p>@Model.FullName</p>
                <p style="color:rgba(0, 0, 0, 0.6)">@Model.Phone</p>
                <p style="color:rgba(0, 0, 0, 0.6)">@Model.Province , @Model.District , @Model.Commune, @Model.Address</p>
            </div>
        </div>

        <div class="card-body" style="background-color:rgba(0, 0, 0, 0.03); border-radius:0px">
            <div class="tab-content" id="pills-tabContent">
                <div class="tab-pane fade show active" id="pills-home" role="tabpanel" aria-labelledby="pills-home-tab">

                    @*Start - Product Detail*@
                    @if (Model.OrderProductDetails != null && Model.OrderProductDetails.Count > 0)
                    {
                        <div class="content-details">
                            <p class="bold-text">Thông tin sản phẩm đã được đặt hàng</p>
                            @for (int i = 0; i < Model.OrderProductDetails.Count; i++)
                            {
                                var productDetail = Model.OrderProductDetails[i];
                                <div class="content-detail">
                                    <div class="product-info">
                                        <img src="@productDetail.Product.Picture" width="50" height="50" alt="Product Image">
                                        <div class="product-info-detail">
                                            <p style="max-width:450px">@productDetail.Product.ProductName</p>
                                            <p style="font-size:.8rem;"><span>x</span>@productDetail.Quantity</p>
                                        </div>
                                    </div>
                                    <p>@($"{(productDetail.Quantity * productDetail.Price):n0}".Replace(",", ".")) VNĐ</p>
                                </div>
                                @if ((productDetail.FeedbackStatus == null || productDetail.FeedbackStatus == false) && productDetail?.StatusOrderProduct?.Trim() == "Delivered")
                                {
                                    isStep5ActiveProduct = 1;
                                    <div class="btn-content-detail">
                                        <button class="btn btn-outline-primary" onclick="openPopupProduct('@productDetail.Product.Picture', '@productDetail.Product.ProductName', '@productDetail.Quantity', '@productDetail.ProductId', '@Model.UserInfoId', '@Model.OrderId', '@productDetail.FeedbackStatus')">Đánh giá</button>
                                    </div>
                                }
                                else if ((productDetail.FeedbackStatus != null || productDetail.FeedbackStatus != false) && productDetail?.StatusOrderProduct?.Trim() == "Delivered")
                                {
                                    isStep5ActiveProduct = 2;
                                }
                                @if (i == Model.OrderProductDetails.Count - 1)
                                {
                                    <div class=" status-content-detail">
                                        @if (productDetail?.StatusOrderProduct?.Trim() == "Placed")
                                        {
                                            <span class="badge badge-info">Sản phẩm đang chờ xác nhận</span>
                                        }
                                        else if (productDetail?.StatusOrderProduct?.Trim() == "Packaging")
                                        {
                                            <span class="badge badge-info">Đóng gói sản phẩm</span>
                                        }
                                        else if (productDetail?.StatusOrderProduct?.Trim() == "Shipped")
                                        {
                                            <span class="badge badge-info">Đơn hàng đang được vận chuyển</span>
                                        }
                                        else if (productDetail?.StatusOrderProduct?.Trim() == "Delivered")
                                        {
                                            <span class="badge badge-info">Đơn hàng được giao đến khách hàng</span>
                                        }
                                    </div>
                                }
                            }
                        </div>
                    }
                    @*End - Product Detail*@

                    @*Start - Service Detail*@
                    @if (Model.BookingServicesDetails != null && Model.BookingServicesDetails.Count > 0)
                    {
                        <div class="content-details">
                            <p class="bold-text">Thông tin dịch vụ đã được đặt hàng</p>
                            @foreach (var serviceDetail in Model.BookingServicesDetails)
                            {
                                <div class="content-detail">
                                    <div class="service-info">
                                        <img src="@serviceDetail.Service.Picture" width="50" height="50" alt="Service Image">
                                        <div class="service-info-detail">
                                            <p style="max-width:450px">@serviceDetail.Service.ServiceName</p>
                                            <p style="font-size:.8rem;"><span>Cân nặng thú cưng: </span>@serviceDetail.Weight Kg</p>
                                            <div>
                                                @if (Model.OrderStatus.Trim() != "Completed")
                                                {
                                                    <p style="font-size:.8rem; cursor: pointer; color:blue" class="map-button clickable"
                                                       data-lat="@serviceDetail?.PartnerInfo?.Lat"
                                                       data-lng="@serviceDetail?.PartnerInfo?.Lng"
                                                       data-my-lat=""
                                                       data-my-lng="">
                                                        Đối tác : @serviceDetail?.PartnerInfo?.FirstName @serviceDetail?.PartnerInfo?.LastName - Mnv: @serviceDetail?.PartnerInfoId
                                                    </p>
                                                }
                                                else
                                                {
                                                    <p style="font-size:.8rem">
                                                        Đối tác : @serviceDetail?.PartnerInfo?.FirstName @serviceDetail?.PartnerInfo?.LastName - Mnv: @serviceDetail?.PartnerInfoId
                                                    </p>
                                                }
                                                <div style="display:flex; align-items:center">
                                                    @{
                                                        var partnerName = serviceDetail?.PartnerInfo?.FirstName + " " + serviceDetail?.PartnerInfo?.LastName + " - " + serviceDetail?.PartnerInfoId;
                                                        if ((serviceDetail.FeedbackPartnerStatus == null || serviceDetail.FeedbackPartnerStatus == false) && @serviceDetail?.StatusOrderService?.Trim() == "Completed")
                                                        {
                                                            isStep5ActivePartner = 1;
                                                            <p style="font-size:.8rem;">Đánh giá về nhân viên của chúng tôi :  </p>
                                                            <div style="margin-bottom:0px; margin-left:.2rem" class="btn-content-detail">
                                                                <button class="btn btn-outline-primary" onclick="openPopupPartner('@serviceDetail?.PartnerInfo.ImagePartner', '@partnerName', '@serviceDetail.PartnerInfo.PartnerInfoId', '@serviceDetail.ServiceId', '@Model.UserInfoId', '@Model.OrderId')">Đánh giá</button>
                                                            </div>
                                                        }
                                                        else if ((serviceDetail.FeedbackPartnerStatus != null || serviceDetail.FeedbackPartnerStatus != false) && @serviceDetail?.StatusOrderService?.Trim() == "Completed")
                                                        {
                                                            isStep5ActivePartner = 2;
                                                        }
                                                    }
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                    <div class="content-detail-time-service">
                                        <p style="font-size:.8rem;">Thời gian bắt đầu: @serviceDetail?.StartTime</p>
                                        <p style="font-size:.8rem;">Thời gian kêt thúc: @serviceDetail?.EndTime</p>
                                    </div>
                                    <p>@($"{(serviceDetail.PriceService):n0}".Replace(",", ".")) VNĐ</p>
                                </div>
                                <div class="status-content-detail">
                                    @if (@serviceDetail?.StatusOrderService.Trim() == "Placed")
                                    {
                                        <span class="badge badge-info">Dịch vụ đang chờ xác nhận</span>
                                    }
                                    else if (@serviceDetail?.StatusOrderService?.Trim() == "Waiting")
                                    {
                                        <span class="badge badge-info">Dịch vụ đang chờ xử lý </span>
                                    }
                                    else if (@serviceDetail?.StatusOrderService?.Trim() == "Received")
                                    {
                                        <span class="badge badge-info">Dịch vụ được nhận bởi nhân viên</span>
                                    }
                                    else if (@serviceDetail?.StatusOrderService?.Trim() == "Processing")
                                    {
                                        <span class="badge badge-info">Đang trong quá trình thực hiện</span>
                                    }
                                    else if (@serviceDetail?.StatusOrderService?.Trim() == "Rejected")
                                    {
                                        <span class="badge badge-info">Bị huỷ bởi nhân viên bạn chọn</span>
                                    }
                                    else if (@serviceDetail?.StatusOrderService?.Trim() == "ReceivedDifficult")
                                    {
                                        <span class="badge badge-info">Dịch vụ được nhận bởi nhân viên khác</span>
                                    }
                                    else if (@serviceDetail?.StatusOrderService?.Trim() == "Completed")
                                    {
                                        <span class="badge badge-info">Dịch vụ đã hoàn thành</span>
                                    }
                                    else if (@serviceDetail?.StatusOrderService?.Trim() == "Cancelled")
                                    {
                                        <span class="badge badge-info">Dịch vụ bị huỷ</span>
                                    }
                                </div>
                                @if ((serviceDetail.FeedbackStatus == null || serviceDetail.FeedbackStatus == false) && @serviceDetail?.StatusOrderService?.Trim() == "Completed")
                                {
                                    isStep5ActiveService = 1;
                                    <div class="btn-content-detail">
                                        <button class="btn btn-outline-primary" onclick="openPopupService('@serviceDetail.Service.Picture', '@serviceDetail.Service.ServiceName', '@serviceDetail.Weight', '@serviceDetail.ServiceId', '@Model.UserInfoId', '@Model.OrderId')">Đánh giá</button>
                                    </div>
                                }
                                else if ((serviceDetail.FeedbackStatus != null || serviceDetail.FeedbackStatus != false) && @serviceDetail?.StatusOrderService?.Trim() == "Completed")
                                {
                                    isStep5ActiveService = 2;                                   
                                }
                            }
                        </div>
                    }
                    @*End - Service Detail*@

                    <div class="headel-content">
                        <p>Tổng giá : </p>
                        <p>@(Model.TotalPrice.ToString("n0").Replace(",", ".")) VNĐ</p>
                    </div>
                    <div class="work-container-inner">
                        @if (Model != null && Model.TypePay != null && Model.TypePay.Trim() == "cash")
                        {
                            <p>Thanh toán trực tiếp</p>
                        }
                        @if (Model != null && Model.TypePay != null && Model.TypePay.Trim() == "vnpay")
                        {
                            <p>Thanh toán bằng hình thức chuyển khoản</p>
                        }
                        @if (!Model.StatusPayment)
                        {
                             <span class="badge badge-info">Chưa thanh toán</span>
                        }
                        else
                        {
                            <span class="badge badge-info">Đã thanh toán</span>
                        }
                    </div>
                    <div class="payment-fail">
                        @if (Model.TypePay.Trim() == "vnpay" && !Model.StatusPayment)
                        {
                            <form method="post" action="@Url.Action("CheckoutAgain", "MyOrders")">
                                <input type="hidden" name="orderID" value="@Model?.OrderId">
                                <input type="hidden" name="orderDate" value="@Model?.OrderDate">
                                <input type="hidden" name="totalPrice" value="@Model?.TotalPrice">
                                <button type="submit" class="btn btn-primary">
                                    Thanh toán ngay
                                </button>
                            </form>
                        }
                    </div>
                </div>
            </div>
        </div>
        @if(isStep5ActiveService == 1 || isStep5ActiveProduct == 1 || isStep5ActivePartner == 1)
        {
            <script>
                document.getElementById('step5').classList.add('active');
            </script>
        }
        else if (isStep5ActiveProduct == 2 || (isStep5ActiveService == 2 && isStep5ActivePartner == 2))
        {
             <script>
                document.getElementById('step5').classList.remove('active');
            </script>
            <style>
                #progressbar-2 li i.fa-star {
                    color: #4caf50;
                    border: 3.5px solid #4caf50;
                }
            </style>
        }
        @if (Model.OrderStatus.Trim() == "Cancelled")
        {
            <div class="card-body cancelled-order-footer" style="border-radius:0px">
                <div class="reason-order-heder">
                    <p style="font-size: 18px">Lý do : </p>
                </div>
                @foreach (var reasonOrder in Model.ReasonOrders)
                {
                    <div class="reason-order-content">
                        <p>Tiêu đề: @reasonOrder.ReasonOrderTitle</p>
                        <p>Mô tả: @reasonOrder.ReasonOrderDescription</p>
                        <p style="color:rgba(0, 0, 0, 0.69)">Thời gian :@reasonOrder.RejectTime</p>
                    </div>
                }
            </div>
        }

        @if ((Model.OrderStatus.Trim() == "Placed" || Model.OrderStatus.Trim() == "Packaging" || Model.OrderStatus.Trim() == "Confirmed") && !Model.StatusPayment)
        {
            <div class="card-body" style="display:block;background-color:rgba(0, 0, 0, 0.03); border-radius:0px">
                <form method="post" asp-controller="MyOrders" asp-action="OrderDetail" onsubmit="return validateForm()">

                    <input type="hidden" name="Id" value="@Model?.OrderId" />
                    <input type="hidden" name="oldStatus" value="@Model?.OrderStatus.Trim()" />

                    <div class="form-check form-check-inline" style="padding: 0;">
                        <button class="btn btn-danger" type="button" onclick="handleCancelledChange()">
                            Hủy Đơn
                        </button>
                    </div>

                    <!-- Thêm lớp phủ -->
                    <div id="overlay" class="overlay"></div>

                    <!-- Popup -->
                    <div id="cancelOrderPopup" class="custom-popup">
                        <div class="popup-content">
                            <span class="close" onclick="closeCancelOrderPopup()">&times;</span>
                            <h5>Hủy Đơn</h5>
                            <input name="newStatus" value="Cancelled" type="hidden" />
                            <div style="padding-bottom: 15px;">
                                <label for="title">Tiêu Đề:</label>
                                <input type="text" id="ReasonOrderTitle" name="ReasonOrderTitle" style="width:700px;" placeholder="Nhập Tiêu Đề">
                                <div style="color:red" class="error-message" id="fname-error-message"></div>
                            </div>
                            <div style="padding-bottom: 15px;">
                                <label for="description">Mô Tả:</label>
                                <textarea id="ReasonOrderDescription" name="ReasonOrderDescription" style="width:700px;height:100px;" placeholder="Nhập Mô Tả"></textarea>
                                <div style="color:red" class="error-message" id="description-error-message"></div>
                            </div>
                            <button type="submit" class="btn btn-danger">Xác nhận Hủy Đơn</button>
                        </div>
                    </div>
                </form>
            </div>
        }
    </div>
    <div class="popup">
        <div id="overlay" class="overlay"></div>
        <div class="feedback popup-container" id="popup">
            <div class="mb--40">
                <!-- Start Comment Respond  -->
                <div class="comment-respond pro-des-commend-respond mt--0">
                    <h3 class="title mb--30">Đánh giá</h3>
                    <div class="information">
                        <img id="popupImage" style="width: 50px; height: 50px;" />
                        <div>
                            <p id="popupServiceName"></p>
                            <p id="popupServiceInfo"></p>
                        </div>
                    </div>
                    <div class="vote-star">
                        <p>Chất lượng sản phẩm/dịch vụ:</p>
                        <div class="rate-all">
                            <div class="rating">
                                <input value="5" name="rate" id="star5" type="radio" checked="">
                                <label title="text" for="star5"></label>
                                <input value="4" name="rate" id="star4" type="radio">
                                <label title="text" for="star4"></label>
                                <input value="3" name="rate" id="star3" type="radio">
                                <label title="text" for="star3"></label>
                                <input value="2" name="rate" id="star2" type="radio">
                                <label title="text" for="star2"></label>
                                <input value="1" name="rate" id="star1" type="radio">
                                <label title="text" for="star1"></label>
                            </div>
                            <div>
                                <label for="super-happy" class="lb-super-happy">
                                    <input type="radio" name="rating" class="super-happy" id="super-happy" value="super-happy">
                                    <svg class="svg" viewBox="0 0 24 24"><path d="M12,17.5C14.33,17.5 16.3,16.04 17.11,14H6.89C7.69,16.04 9.67,17.5 12,17.5M8.5,11A1.5,1.5 0 0,0 10,9.5A1.5,1.5 0 0,0 8.5,8A1.5,1.5 0 0,0 7,9.5A1.5,1.5 0 0,0 8.5,11M15.5,11A1.5,1.5 0 0,0 17,9.5A1.5,1.5 0 0,0 15.5,8A1.5,1.5 0 0,0 14,9.5A1.5,1.5 0 0,0 15.5,11M12,20A8,8 0 0,1 4,12A8,8 0 0,1 12,4A8,8 0 0,1 20,12A8,8 0 0,1 12,20M12,2C6.47,2 2,6.5 2,12A10,10 0 0,0 12,22A10,10 0 0,0 22,12A10,10 0 0,0 12,2Z"></path></svg>
                                    Tuyệt vời
                                </label>
                                <label for="neutral" class="lb-neutral" style="display: none">
                                    <input type="radio" name="rating" class="neutral" id="neutral" value="neutral">
                                    <svg class="svg" viewBox="0 0 24 24"><path d="M8.5,11A1.5,1.5 0 0,1 7,9.5A1.5,1.5 0 0,1 8.5,8A1.5,1.5 0 0,1 10,9.5A1.5,1.5 0 0,1 8.5,11M15.5,11A1.5,1.5 0 0,1 14,9.5A1.5,1.5 0 0,1 15.5,8A1.5,1.5 0 0,1 17,9.5A1.5,1.5 0 0,1 15.5,11M12,20A8,8 0 0,0 20,12A8,8 0 0,0 12,4A8,8 0 0,0 4,12A8,8 0 0,0 12,20M12,2A10,10 0 0,1 22,12A10,10 0 0,1 12,22C6.47,22 2,17.5 2,12A10,10 0 0,1 12,2M9,14H15A1,1 0 0,1 16,15A1,1 0 0,1 15,16H9A1,1 0 0,1 8,15A1,1 0 0,1 9,14Z"></path></svg>
                                    Bình thường
                                </label>
                                <label for="super-sad" class="lb-super-sad" style="display: none">
                                    <input type="radio" name="rating" class="super-sad" id="super-sad" value="super-sad">
                                    <svg class="svg" viewBox="0 0 24 24"><path d="M12,2C6.47,2 2,6.47 2,12C2,17.53 6.47,22 12,22A10,10 0 0,0 22,12C22,6.47 17.5,2 12,2M12,20A8,8 0 0,1 4,12A8,8 0 0,1 12,4A8,8 0 0,1 20,12A8,8 0 0,1 12,20M16.18,7.76L15.12,8.82L14.06,7.76L13,8.82L14.06,9.88L13,10.94L14.06,12L15.12,10.94L16.18,12L17.24,10.94L16.18,9.88L17.24,8.82L16.18,7.76M7.82,12L8.88,10.94L9.94,12L11,10.94L9.94,9.88L11,8.82L9.94,7.76L8.88,8.82L7.82,7.76L6.76,8.82L7.82,9.88L6.76,10.94L7.82,12M12,14C9.67,14 7.69,15.46 6.89,17.5H17.11C16.31,15.46 14.33,14 12,14Z"></path></svg>
                                    Thất vọng
                                </label>
                            </div>
                        </div>
                    </div>
                    <form>
                        <div class="row">
                            <div class="col-12">
                                <div class="form-group">
                                    <label>Đánh giá của bạn</label>
                                    <input type="hidden" id="serviceIdInput" value="" />
                                    <input type="hidden" id="productIdInput" value="" />
                                    <input type="hidden" id="roomIdInput" value="" />
                                    <input type="hidden" id="partnerIdInput" value="" />
                                    <input type="hidden" id="ratingInput" value="" />
                                    <input type="hidden" id="userIdInput" value="" />
                                    <input type="hidden" id="orderIdInput" value="" />
                                    <textarea name="message" id="feedbackMessage" placeholder="Hãy chia sẻ những điều bạn thích về sản phẩm/dịch vụ này với mọi người nhé." cols="300" rows="5"></textarea>
                                </div>
                            </div>
                            <div class="col-lg-12">
                                <div class="form-submit">
                                    <button type="button" class="back" onclick="closePopup()">Trở lại</button>
                                    <button type="button" id="submit-feedback" class="done">Hoàn thành</button>
                                </div>
                            </div>
                        </div>
                    </form>
                </div>
                <!-- End Comment Respond  -->
            </div>
        </div>
    </div>

    <div id="mapModal" class="modal">
        <div class="modal-content">
            <span class="close" onclick="closeMapModal()">&times;</span>
            <div id="map"></div>
        </div>
        <div id="directionsPanel"></div>
    </div>

    <script src="~/js/map.js"></script>
    <script src="~/js/order/reasonreject.js"></script>
    <script src="https://code.jquery.com/jquery-3.6.4.min.js"></script>

    <script src="https://maps.googleapis.com/maps/api/js?key=AIzaSyAMF53NXGYhHFNQQcT87lhe0ieM3AkUjYM"></script>
    <script>
        document.addEventListener("DOMContentLoaded", function () {
            updateConnectorWidth();
        });

        window.addEventListener("resize", function () {
            updateConnectorWidth();
        });

        function updateConnectorWidth() {
            var progressBar = document.getElementById("progressbar-2");
            var steps = progressBar.getElementsByTagName("li");

            for (var i = 0; i < steps.length - 1; i++) {
                var connector = document.createElement("div");
                connector.classList.add("connector");
                steps[i].appendChild(connector);

                var nextStepLeft = steps[i + 1].offsetLeft;
                var currentStepRight = steps[i].offsetLeft + steps[i].offsetWidth;

                var connectorWidth = nextStepLeft - currentStepRight;
                connector.style.width = connectorWidth + "px";
            }
        };

        function goBack() {
            window.history.go(-1);
        };

        @*Open Map*@
            $('.clickable').click(function () {
                var partnerLatitude = parseFloat($(this).data("lat"));
                var partnerLongitude = parseFloat($(this).data("lng"));
                var myLatitude = parseFloat($(this).data("my-lat"));
                var myLongitude = parseFloat($(this).data("my-lng"));

                if (isNaN(myLatitude) || isNaN(myLongitude)) {
                    // Nếu vị trí của bạn không được xác định trước đó, hãy lấy lại
                    if (navigator.geolocation) {
                        navigator.geolocation.getCurrentPosition(function (position) {
                            myLatitude = position.coords.latitude;
                            myLongitude = position.coords.longitude;

                            // Lưu trữ vị trí của bạn để sử dụng cho các lần click sau
                            $(this).data("my-lat", myLatitude);
                            $(this).data("my-lng", myLongitude);

                            showPosition(partnerLatitude, partnerLongitude, myLatitude, myLongitude);
                        }, function (error) {
                            console.error("Error getting current location:", error);
                        });
                    } else {
                        alert("Trình duyệt không hỗ trợ lấy vị trí.");
                    }
                } else {
                    showPosition(partnerLatitude, partnerLongitude, myLatitude, myLongitude);
                }
            });

        $(".close").click(function () {
            closeMapModal();
        });

        $(window).click(function (event) {
            if (event.target.id === "mapModal") {
                closeMapModal();
            }
        });

        function showPosition(partnerLatitude, partnerLongitude, myLatitude, myLongitude) {
            initMap(partnerLatitude, partnerLongitude, myLatitude, myLongitude);
            openMapModal();
            calculateAndDisplayRoute(directionsService, directionsDisplay, { lat: myLatitude, lng: myLongitude }, { lat: partnerLatitude, lng: partnerLongitude });
        }

        function openMapModal() {
            $("#mapModal").css("display", "block");
        }

        function closeMapModal() {
            $("#mapModal").css("display", "none");
        }

        function initMap(latitude, longitude, myLatitude, myLongitude) {
            var directionsService = new google.maps.DirectionsService();
            var directionsDisplay = new google.maps.DirectionsRenderer();

            var map = new google.maps.Map(document.getElementById('map'), {
                center: { lat: latitude, lng: longitude },
                zoom: 15
            });

            var marker = new google.maps.Marker({
                position: { lat: latitude, lng: longitude },
                map: map,
                title: 'Vị trí đối tác',
                icon: 'http://maps.google.com/mapfiles/ms/icons/red-dot.png'
            });

            var myMarker = new google.maps.Marker({
                position: { lat: myLatitude, lng: myLongitude },
                map: map,
                title: 'Vị trí của tôi',
                icon: 'http://maps.google.com/mapfiles/ms/icons/green-dot.png'
            });

            directionsDisplay.setMap(map);
            calculateAndDisplayRoute(directionsService, directionsDisplay, { lat: myLatitude, lng: myLongitude }, { lat: latitude, lng: longitude });
        }

        function calculateAndDisplayRoute(directionsService, directionsDisplay, start, end) {
            directionsService.route({
                origin: start,
                destination: end,
                travelMode: 'DRIVING'
            }, function (response, status) {
                if (status === 'OK') {
                    directionsDisplay.setDirections(response);
                } else {
                    window.alert('Không thể hiển thị tuyến đường do: ' + status);
                }
            });
        }
        @*End Map*@
    </script>

    @*Đánh giá*@
    <script>
            //Hiện popup đánh giá service
            function openPopupService(image, serviceName, weight, serviceId, userId, orderId) {
                document.getElementById('overlay').style.display = 'block';
                document.getElementById('popup').style.display = 'block';

                document.getElementById('popupImage').src = image;
                document.getElementById('popupServiceName').innerText = serviceName;
                document.getElementById('popupServiceInfo').innerText = 'Cân nặng: ' + weight + ' Kg';

                document.getElementById('serviceIdInput').value = serviceId;
                document.getElementById('userIdInput').value = userId;
                document.getElementById('orderIdInput').value = orderId;
                document.getElementById('productIdInput').value = null;
                document.getElementById('roomIdInput').value = null;
                document.getElementById('partnerIdInput').value = null;
            }

        //Hiện popup đánh giá product
        function openPopupProduct(image, productName, quantity, productId, userId, orderId, status) {
            document.getElementById('overlay').style.display = 'block';
            document.getElementById('popup').style.display = 'block';

            document.getElementById('popupImage').src = image;
            document.getElementById('popupServiceName').innerText = productName;
            document.getElementById('popupServiceInfo').innerText = 'x' + quantity;

            document.getElementById('productIdInput').value = productId;
            document.getElementById('userIdInput').value = userId;
            document.getElementById('orderIdInput').value = orderId;
            document.getElementById('serviceIdInput').value = null;
            document.getElementById('roomIdInput').value = null;
            document.getElementById('partnerIdInput').value = null;
        }

        //Hiện popup đánh giá room
        function openPopupRoom(image, roomName, roomId, userId, orderId, status) {
            document.getElementById('overlay').style.display = 'block';
            document.getElementById('popup').style.display = 'block';

            document.getElementById('popupImage').src = image;
            document.getElementById('popupServiceName').innerText = roomName;

            document.getElementById('roomIdInput').value = roomId;
            document.getElementById('userIdInput').value = userId;
            document.getElementById('orderIdInput').value = orderId;
            document.getElementById('serviceIdInput').value = null;
            document.getElementById('productIdInput').value = null;
            document.getElementById('partnerIdInput').value = null;
        }

        //Hiện popup đánh giá partner
        function openPopupPartner(image, partnerName, partnerId, serviceId, userId, orderId, status) {
            document.getElementById('overlay').style.display = 'block';
            document.getElementById('popup').style.display = 'block';

            document.getElementById('popupImage').src = image;
            document.getElementById('popupServiceName').innerText = partnerName;

            document.getElementById('partnerIdInput').value = partnerId;
            document.getElementById('userIdInput').value = userId;
            document.getElementById('orderIdInput').value = orderId;
            document.getElementById('serviceIdInput').value = serviceId;
            document.getElementById('productIdInput').value = null;
            document.getElementById('roomIdInput').value = null;
        }

        // Ẩn popup đánh giá
        function closePopup() {
            document.getElementById('overlay').style.display = 'none';
            document.getElementById('popup').style.display = 'none';
        }

        // Xử lý rating khi chọn sao thì hiện ra content theo sao vote
        document.querySelectorAll('.rating input').forEach(input => {
            input.addEventListener('change', function () {
                // Ẩn tất cả các nhãn
                document.querySelectorAll('.lb-super-happy, .lb-neutral, .lb-super-sad').forEach(label => {
                    label.style.display = 'none';
                });

                // Hiển thị nhãn tương ứng với số sao được chọn
                if (this.value >= 4) {
                    document.querySelector('.lb-super-happy').style.display = 'block';
                } else if (this.value == 3 || this.value == 2) {
                    document.querySelector('.lb-neutral').style.display = 'block';
                } else {
                    document.querySelector('.lb-super-sad').style.display = 'block';
                }
            });
        });

        function captureRating() {
            var ratingRadios = document.getElementsByName('rate');

            for (var i = 0; i < ratingRadios.length; i++) {
                if (ratingRadios[i].checked) {
                    var rating = parseInt(ratingRadios[i].value);

                    document.getElementById('ratingInput').value = rating;
                    break;
                }
            }
            return rating;
        }

        // Khi gửi đánh giá lên
        document.getElementById('submit-feedback').addEventListener('click', function () {

            captureRating();

            var feedbackMessage = document.getElementById('feedbackMessage').value;

            var serviceId = document.getElementById('serviceIdInput').value;
            var productId = document.getElementById('productIdInput').value;
            var roomId = document.getElementById('roomIdInput').value;
            var partnerId = document.getElementById('partnerIdInput').value;
            var rating = document.getElementById('ratingInput').value;
            var userId = document.getElementById('userIdInput').value;
            var orderId = document.getElementById('orderIdInput').value;

            if (rating && feedbackMessage) {
                var data = {
                    NumberStart: parseInt(rating),
                    Content: feedbackMessage,
                    UserId: userId,
                    OrderId: orderId
                };

                if (productId !== null) {
                    data.ProductId = parseInt(productId);
                }
                if (serviceId !== null) {
                    data.ServiceId = parseInt(serviceId);
                }
                if (roomId !== null) {
                    data.RoomId = parseInt(roomId);
                }
                if (partnerId !== null) {
                    data.PartnerId = parseInt(partnerId);
                }

                //console.log("serviceId: " + serviceId + "productId: " + productId + "roomId: " + roomId + "partnerId: " + partnerId + "rating: " + rating + "userId: " + userId + "orderId: " + orderId + "feedbackMessage: " + feedbackMessage);

                $.ajax({
                    url: 'https://pet-service-api.azurewebsites.net/api/Feedback/AddFeedBack',
                    type: 'POST',
                    contentType: 'application/json',
                    data: JSON.stringify(data),
                    success: function (response) {

                        closePopup();
                        showSuccessFeedbackViewBag();
                        location.reload();
                    },
                    error: function (error) {
                        showErrorToastFeedbackViewBag();
                    }
                });
            }
            else {
                showErrorToastFeedback2ViewBag();
            }
        });
    </script>
    @*Hủy đơn*@
    <script>
        function openCancelOrderPopup() {
            document.getElementById('overlay').style.display = 'block';
            document.getElementById('cancelOrderPopup').classList.add('show-popup');
        }

        function closeCancelOrderPopup() {
            document.getElementById('overlay').style.display = 'none';
            document.getElementById('cancelOrderPopup').classList.remove('show-popup');
        }
    </script>
    <script>
        function handleCancelledChange() {
            // Hiển thị popup khi nút được nhấn
            openCancelOrderPopup();

            // Thiết lập giá trị "Cancelled" cho lựa chọn newStatus (hoặc thực hiện các hành động cần thiết)
            var newStatusInput = document.querySelector('input[name="newStatus"]');
            if (newStatusInput) {
                newStatusInput.value = 'Cancelled';
            }

            // Hiển thị hoặc ẩn phần lý do hủy đơn tùy thuộc vào giá trị chọn
            var reasonSelectDiv = document.getElementById('reasonSelect');
            var lydoKhacDiv = document.getElementById('lydoKhac');

            reasonSelectDiv.style.display = 'block';
            lydoKhacDiv.style.display = 'block';
        }
    </script>
</body>
</html>
