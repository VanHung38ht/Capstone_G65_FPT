<link href="~/css/datatable.css" rel="stylesheet" />
<link href="//cdn.datatables.net/buttons/1.7.1/css/buttons.dataTables.min.css" rel="stylesheet">
<link href="//cdn.datatables.net/1.13.4/css/jquery.dataTables.min.css" rel="stylesheet">
<link href="~/css/toastNotification.css" rel="stylesheet" />
<script src="//code.jquery.com/jquery-3.6.0.min.js"></script>
<script src="//cdn.datatables.net/1.13.4/js/jquery.dataTables.min.js"></script>
<script src="//cdn.datatables.net/buttons/1.7.1/js/dataTables.buttons.min.js"></script>
<script src="//cdn.datatables.net/buttons/1.7.1/js/buttons.html5.min.js"></script>
<script src="//cdnjs.cloudflare.com/ajax/libs/jszip/3.1.3/jszip.min.js"></script>
<script src="//cdn.datatables.net/buttons/1.7.1/js/buttons.print.min.js"></script>
<script src="//cdn.datatables.net/buttons/1.7.1/js/buttons.colVis.min.js"></script>
<link href="~/css/partner/listorderpartner.css" rel="stylesheet" />
<script>
    $(document).ready(function () {
        // Khởi tạo DataTables
        var table = $('#lists').DataTable({
            "paging": true,
            "lengthMenu": [[5, 10, 25, 50, -1], [5, 10, 25, 50, "All"]],
            "searching": true,
            "ordering": true,
            "info": true,
            "autoWidth": false,
            "columnDefs": [
                { "targets": [0], "width": "4%" },
                { "targets": [1], "width": "15%" },
                { "targets": [2], "width": "27%" },
                { "targets": [3], "width": "17%" }, // Điều chỉnh cột này để khớp với số cột thực tế
                { "targets": [4], "width": "10%" },
                { "targets": [5], "width": "10%" },
                { "targets": [6], "width": "6%" },
                //{ "targets": [7], "width": "11%" },
            ],
            "language": {
                "lengthMenu": "Hiển thị _MENU_ dòng",
                "info": "Hiển thị _START_ - _END_ trên tổng cộng _TOTAL_ dòng",
                "search": "Tìm kiếm:",
                "paginate": {
                    "first": "Đầu",
                    "last": "Cuối",
                    "next": "Tiếp",
                    "previous": "Trước"
                }
            },
        });
    });
</script>

<h1>Danh Sách Đơn Hàng Của Nhân Viên</h1>

<table id="lists" class="display">
    <thead>
        <tr>
            <th>No.</th>
            <th>Người Mua</th>
            <th>Tên Dịch Vụ - Giá Dịch Vụ</th>
            <th>Ngày Đặt Đơn</th>
            <th>Số Điện Thoại</th>
            <th>Trạng Thái</th>
            <th>Chi Tiết</th>
            @*<th></th>*@
        </tr>
    </thead>
    <tbody>
        @if (Model != null && Model.Count > 0)
        {
            int itemCount = 0;
            foreach (var pc in Model)
            {
                foreach (var pcb in pc.BookingServicesDetails)
                {
                    itemCount++;
                    if (pcb.StatusOrderService?.Trim() == "Received")
                    {
                        <tr>
                            <td>@itemCount</td>
                            @*<td><img src="@pc.UserInfoId" width="50" height="50"></td>*@
                            <td>@pc.UserInfo?.FirstName @pc.UserInfo?.LastName</td>
                            <td>
                                <div>
                                    @pcb.Service.ServiceName - @pcb.Price.ToString("n0").Replace(",", ".") VNĐ <br>
                                </div>
                            </td>
                            <td>@pc.OrderDate</td>
                            <td>@pc.UserInfo.Phone</td>
                            <td>
                                Đơn hàng đã được xác nhận
                            </td>
                            <td>
                                <a class="detail-button" href="/Partner/HomePartner/OrderPartnerDetail?orderId=@pc.OrderId">Chi tiết</a>
                            </td>
                            @*<td>
                                <a class="processing-button" data-orderid="@pc.OrderId">Thực Hiện</a>
                            </td>*@
                        </tr>
                    }
                }



            }

        }
        @*<script>
            // Hàm JavaScript để cập nhật trạng thái đơn hàng
            $(document).ready(function () {
                // Sử dụng class để chọn button
                var buttons_received = $('.processing-button');

                buttons_received.click(function () {
                    var orderId = $(this).data('orderid');
                    let url = 'https://pet-service-api.azurewebsites.net/api/OrderPartner/UpdateOrderStatusProcessing?orderId=' + orderId;
                    fetch(url).then(response => {
                        if (response.status == 200) {
                            console.log("Hoàn thành đơn thành công!");
                            location.reload();
                        } else {
                            console.log("Hoàn thành đơn thất bại!");
                        }
                    });
                });
            });
        </script>*@
    </tbody>
    <tfoot>
        @if (ViewBag.ErrorMessage != null)
        {
            <div class="alert alert-danger">
                <span style="color:red">@ViewBag.ErrorMessage</span>
            </div>
        }
    </tfoot>



    <!-- Your table and data display code -->

</table>
<style>
    .switch {
        position: relative;
        width: 80px;
        height: 35px;
        margin-left: -7px;
    }

    .btn-active {
        background-color: #43e240;
        color: white;
        font-size: 13px;
        width: 135px;
        height: 40px;
        border-radius: 5px;
    }

    .btn-inactive {
        background-color: #f2110d;
        color: white;
        font-size: 13px;
        width: 135px;
        height: 40px;
        border-radius: 5px;
    }

    .toggle {
        position: absolute;
        top: 0;
        left: 0;
        width: inherit;
        height: inherit;
        opacity: 0;
        z-index: 2;
        cursor: pointer;
    }

    .label {
        position: absolute;
        top: 2px;
        left: 10px;
        right: 2px;
        bottom: 2px;
        background-color: #C84444;
        border-radius: 24px;
        transition: background-color .2s ease-in-out;
    }

        .label::before {
            content: "";
            position: absolute;
            top: -2px;
            left: -2px;
            width: 35px;
            height: 35px;
            background-color: white;
            border-radius: inherit;
            border: 1px solid grey;
        }

    .toggle:checked + .label {
        background-color: #43e240;
    }

        .toggle:checked + .label::before {
            transform: translateX(100%);
        }

    .td-switch {
        display: flex;
        align-items: center;
    }

        .td-switch .label {
            width: 25px;
            height: 25px;
        }

            .td-switch .label.active {
                background-color: #43e240;
            }

            .td-switch .label.inactive {
                background-color: #f2110d;
            }
</style>