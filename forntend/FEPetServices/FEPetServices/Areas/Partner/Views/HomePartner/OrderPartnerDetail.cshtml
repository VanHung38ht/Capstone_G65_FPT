<!DOCTYPE html>
<html>
<head>
    <title>Order Partner Detail</title>
    <link href="~/css/manager/print.css" rel="stylesheet" />
    <link href="~/css/toastNotification.css" rel="stylesheet" />
</head>
<body>
    <div class="container print-container">
        <h2>Chi tiết đơn hàng</h2>
        @*Thông tin đơn hàng*@
        <form method="post" action="@Url.Action("OrderPartnerDetail", "HomePartner")">
            <div class="form-group row">
                <label class="col-sm-3 col-form-label">Ngày mua hàng :</label>
                <div class="col-sm-9">
                    <input type="text" readonly class="form-control-plaintext" value="@Model?.OrderDate">
                </div>
            </div>
            <div class="form-group row">
                <label class="col-sm-3 col-form-label">Trạng thái :</label>
                <div class="col-sm-9" style="padding-top:8px">
                    @foreach (var status in Model.BookingServicesDetails)
                    {
                        @if (status.StatusOrderService.Trim() == "Completed")
                        {
                            <span style="display:inline-block;background-color: #17a2b8;color: white;">Đã hoàn thành</span>
                        }
                        else if (status.StatusOrderService.Trim() == "Waiting" && status.PartnerInfoId == null)
                        {
                            <span style="display:inline-block;background-color: #17a2b8;color: white;">Đang chờ xác nhận</span>
                        }
                        else if (status.StatusOrderService.Trim() == "Received")
                        {
                            <span style="display:inline-block;background-color: #17a2b8;color: white;">Đơn hàng đã được xác nhận</span>
                        }
                        else if (status.StatusOrderService.Trim() == "Processing")
                        {
                            <span style="display:inline-block;background-color: #17a2b8;color: white;">Đơn hàng đang thực hiện</span>
                        }
                        else if (status.StatusOrderService.Trim() == "Waiting" && status.PartnerInfoId != null)
                        {
                            <span style="display:inline-block;background-color: #17a2b8;color: white;">Đơn hàng đặc biệt đang chờ xác nhận</span>
                        }
                    }

                </div>
            </div>
            @*Thông tin khách hàng*@
            <h3>Thông tin khách hàng</h3>
            <div class="form-group row">
                <label class="col-sm-3 col-form-label">Tên Khách Hàng :</label>
                <div class="col-sm-9">
                    <input type="text" readonly class="form-control-plaintext" value="@Model.UserInfo.FirstName @Model.UserInfo.LastName">
                </div>
            </div>
            <div class="form-group row">
                <label class="col-sm-3 col-form-label">Địa chỉ :</label>
                <div class="col-sm-9">
                    <input type="text" readonly class="form-control-plaintext"
                           value="@Model.Province , @Model.District , @Model.Commune">
                </div>
            </div>
            <div class="form-group row">
                <label class="col-sm-3 col-form-label">Địa chỉ cụ thể :</label>
                <div class="col-sm-9">
                    <input type="text" readonly class="form-control-plaintext" value="@Model.Address">
                </div>
            </div>
            <div class="form-group row">
                <label class="col-sm-3 col-form-label">Thông tin liên hệ :</label>
                <div class="col-sm-9">
                    <input type="text" readonly class="form-control-plaintext" value="@Model.UserInfo.Phone">
                </div>
            </div>
            <h3>Thông tin dịch vụ</h3>
            <table class="table">
                <thead>
                    <tr>
                        <th>Tên dịch vụ</th>
                        <th>Cân Nặng</th>
                        <th>Giá từng dịch vụ</th>
                        <th>Tổng giá</th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var serviceDetail in Model.BookingServicesDetails)
                    {
                        <tr>
                            <td>@serviceDetail.Service.ServiceName</td>
                            <td>@serviceDetail.Weight</td>
                            <td>@(serviceDetail.Price.ToString("n0").Replace(",", ".")) VNĐ</td>
                            <td>@(serviceDetail.PriceService.ToString("n0").Replace(",", ".")) VNĐ</td>
                        </tr>
                    }
                </tbody>
            </table>


            @for (int i = 0; i < Model.BookingServicesDetails.Count; i++)
            {
                var status = Model.BookingServicesDetails[i];
                @if (status.StatusOrderService.Trim() == "Waiting" && status.PartnerInfoId != null)
                {
                    <input type="hidden" name="orderId" value="@Model?.OrderId" />
                    <input type="hidden" name="oldStatus" value="@status?.StatusOrderService.Trim()" />
                    <div style="display:flex;">
                        @*@if (Model.BookingServicesDetails.PartnerInfoId != null){}*@
                        <div class="form-check form-check-inline">
                            <input class="form-check-input" type="radio" id="receivedCheckbox" name="newStatus" value="Confirmed" onchange="handleStatusChange()">
                            <label class="form-check-label" for="receivedCheckbox">Nhận Đơn</label>
                        </div>

                        <div class="form-check form-check-inline">
                            <input class="form-check-input" type="radio" id="rejectedCheckbox" name="newStatus" value="Waiting" onchange="handleStatusChange()" onchange="handleRejectChange()">
                            <label class="form-check-label" for="rejectedCheckbox">Hủy Đơn</label>
                        </div>


                    </div>
                    <div id="lydoKhac" style="display: none;">
                        <div>
                            <label for="title">Tiêu Đề:</label>
                            <input type="text" id="ReasonOrderTitle" name="ReasonOrderTitle" style="width:100%" placeholder="Nhập Tiêu Đề">
                            <div style="color:red" class="error-message" id="fname-error-message"></div>
                        </div>
                        <div>
                            <label for="description">Mô Tả:</label>
                            <textarea id="ReasonOrderDescription" name="ReasonOrderDescription" style="width:100%" placeholder="Nhập Mô Tả"></textarea>
                            <div style="color:red" class="error-message" id="description-error-message"></div>
                        </div>
                    </div>
                    @*
            <div id="lydoKhac" style="display: none;">
            <div>
            <label for="title">Tiêu Đề:</label>
            <input type="text" id="ReasonOrderTitle" name="ReasonOrderTitle" style="width:100%" placeholder="Nhập Tiêu Đề">
            <div style="color:red" class="error-message" id="fname-error-message"></div>
            </div>
            <div>
            <label for="description">Mô Tả:</label>
            <textarea id="ReasonOrderDescription" name="ReasonOrderDescription" style="width:100%" placeholder="Nhập Mô Tả"></textarea>
            <div style="color:red" class="error-message" id="description-error-message"></div>
            </div>
            </div>*@

                    @*<form method="post" asp-controller="HomePartner" asp-action="OrderPartnerDetail">*@
                    @Html.AntiForgeryToken()
                    <button class="btn btn-primary" style="margin-top: 20px;" type="submit">Xác nhận</button>
                    <a class="btn btn-primary" style="margin-top: 20px;" href="~/Partner/HomePartner/ListOrderPartnerSpecial">Trở lại</a>
                }
                else if (status.StatusOrderService.Trim() == "Waiting" && status.PartnerInfoId == null)
                {
                    <input type="hidden" name="orderId" value="@Model?.OrderId" />
                    <input type="hidden" name="oldStatus" value="@status?.StatusOrderService.Trim()" />
                    <div style="display:flex;">
                        @*@if (Model.BookingServicesDetails.PartnerInfoId != null){}*@
                        <div class="form-check form-check-inline">
                            <input class="form-check-input" type="radio" id="receivedCheckbox" name="newStatus" value="Confirmed">
                            <label class="form-check-label" for="receivedCheckbox">Nhận Đơn</label>
                        </div>
                    </div>
                    @Html.AntiForgeryToken()
                    <button class="btn btn-primary" style="margin-top: 20px;" type="submit">Xác nhận</button>
                    <a class="btn btn-primary" style="margin-top: 20px;" href="~/Partner/HomePartner/ListOrderPartner">Trở lại</a>
                }
                else if (status.StatusOrderService.Trim() == "Received")
                {
                    <input type="hidden" name="orderId" value="@Model?.OrderId" />
                    <input type="hidden" name="oldStatus" value="@status?.StatusOrderService.Trim()" />
                    <div style="display:flex;">
                        @*@if (Model.BookingServicesDetails.PartnerInfoId != null){}*@
                        <div class="form-check form-check-inline">
                            <input class="form-check-input" type="radio" id="receivedCheckbox" name="newStatus" value="Processing">
                            <label class="form-check-label" for="receivedCheckbox">Bắt đầu đơn</label>
                        </div>
                    </div>
                    @Html.AntiForgeryToken()
                    <button class="btn btn-primary" style="margin-top: 20px;" type="submit">Xác nhận</button>
                    <a class="btn btn-primary" style="margin-top: 20px;" href="~/Partner/HomePartner/ListOrderPartnerReceived">Trở lại</a>
                }
                else if (status.StatusOrderService.Trim() == "Processing")
                {
                    <input type="hidden" name="orderId" value="@Model?.OrderId" />
                    <input type="hidden" name="oldStatus" value="@status?.StatusOrderService.Trim()" />
                    <div style="display:flex;">
                        @*@if (Model.BookingServicesDetails.PartnerInfoId != null){}*@
                        <div class="form-check form-check-inline">
                            <input class="form-check-input" type="radio" id="receivedCheckbox" name="newStatus" value="Completed">
                            <label class="form-check-label" for="receivedCheckbox">Hoàn thành đơn</label>
                        </div>
                    </div>
                    @Html.AntiForgeryToken()

                    <button class="btn btn-primary" style="margin-top: 20px;" type="submit">Xác nhận</button>
                    <a class="btn btn-primary" style="margin-top: 20px;" href="~/Partner/HomePartner/ListOrderPartnerProcessing">Trở lại</a>
                }
                else if (status.StatusOrderService.Trim() == "Completed")
                {
                    <a class="btn btn-primary" style="margin-top: 20px;" href="~/Partner/HomePartner/ListOrderPartnerComplete">Trở lại</a>
                }
            }

        </form>
        @*<button class="btn btn-primary" onclick="window.print()">In hoá đơn</button>*@

    </div>
    <script src="~/js/order/reasonreject.js"></script>

    <script>
        // Xử lý sự kiện khi chọn nút radio "Rejected"
        function handleStatusChange() {
            var rejectedCheckbox = document.getElementById("rejectedCheckbox");
            var lydoKhac = document.getElementById("lydoKhac");

            if (rejectedCheckbox.checked) {
                lydoKhac.style.display = "block";
            } else {
                lydoKhac.style.display = "none";
            }
        }
    </script>

    <script>
        function handleRejectChange() {
            var partnerIdInput = document.getElementById('partnerId');
            partnerIdInput.value = null;
            // Hiển thị hoặc ẩn phần lý do hủy đơn tùy thuộc vào giá trị chọn
            var reasonSelectDiv = document.getElementById('reasonSelect');
            var lydoKhacDiv = document.getElementById('lydoKhac');
            var rejectedCheckbox = document.getElementById('rejectedCheckbox');

            if (rejectedCheckbox.checked) {
                reasonSelectDiv.style.display = 'block';
                lydoKhacDiv.style.display = 'block';
            } else {
                reasonSelectDiv.style.display = 'none';
                lydoKhacDiv.style.display = 'none';
            }
        }

        function handleReasonChange(selectElement) {
            var lydoKhacDiv = document.getElementById('lydoKhac');

            if (selectElement.value == 'khac') {
                lydoKhacDiv.style.display = 'block';  // Hiển thị div khi chọn lựa chọn "Lý Do Hủy Đơn Khác"
            } else {
                lydoKhacDiv.style.display = 'none';   // Ẩn div khi chọn bất kỳ lựa chọn khác
            }
        }
    </script>
</body>
</html>
